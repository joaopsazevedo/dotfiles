if [ -n "$TMUX" ]; then
    [ -f "$TMUX_ENV" ] && source "$TMUX_ENV"
fi

# ZSH_INITIALIZED is a guard for tmux
if [[ "$ZSH_INITIALIZED" == "1" ]]; then
  return 0
fi

# Aliases
[ -f "$HOME/.aliases" ] && source "$HOME/.aliases"

# User bin directories
if [ -d "$HOME/bin" ] ; then
    export PATH="$HOME/bin:$PATH"
fi
if [ -d "$HOME/.local/bin" ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Programming Languages

## Rust and cargo
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

## OCaml and opam
[ -f "$HOME/.opam/opam-init/init.zsh" ] && source "$HOME/.opam/opam-init/init.zsh" > /dev/null 2> /dev/null

## Python and pyenv
if [ -d "$HOME/.pyenv" ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init - --no-push-path)"
    eval "$(pyenv virtualenv-init -)"
fi

## Tools

### JetBrains Toolbox
if [ -d "$HOME/.local/share/JetBrains/Toolbox/scripts" ] ; then
    export PATH="$HOME/.local/share/JetBrains/Toolbox/scripts:$PATH"
fi
if [ -d "$HOME/Library/Application Support/JetBrains/Toolbox/scripts" ] ; then
    export PATH="$HOME/Library/Application Support/JetBrains/Toolbox/scripts:$PATH"
fi

# MacOS Homebrew
[ -f "/opt/homebrew/bin/brew" ] && eval "$(/opt/homebrew/bin/brew shellenv)"

# Local profile
[ -f "$HOME/.local_env" ] && source "$HOME/.local_env"

export ZSH_INITIALIZED=1
